{"version":3,"sources":["views/users/UsersData.js","views/base/tables/Tables.js"],"names":["usersData","id","name","registered","role","status","getBadge","fields","fieldstemp","Tables","xs","lg","items","itemsPerPage","dark","pagination","striped","scopedSlots","item","color","size","bordered","hover"],"mappings":"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","file":"static/js/27.ed4a048f.chunk.js","sourcesContent":["const usersData = [\n  {id: 0, name: 'John Doe', registered: '2018/01/01', role: 'Guest', status: 'Pending'},\n  {id: 1, name: 'Samppa Nori', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 2, name: 'Estavan Lykos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 3, name: 'Chetan Mohamed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 4, name: 'Derick Maximinus', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 5, name: 'Friderik Dávid', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 6, name: 'Yiorgos Avraamu', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 7, name: 'Avram Tarasios', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 8, name: 'Quintin Ed', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 9, name: 'Enéas Kwadwo', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 10, name: 'Agapetus Tadeáš', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 11, name: 'Carwyn Fachtna', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 12, name: 'Nehemiah Tatius', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 13, name: 'Ebbe Gemariah', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 14, name: 'Eustorgios Amulius', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 15, name: 'Leopold Gáspár', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 16, name: 'Pompeius René', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 17, name: 'Paĉjo Jadon', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 18, name: 'Micheal Mercurius', registered: '2018/02/01', role: 'Admin', status: 'Inactive'},\n  {id: 19, name: 'Ganesha Dubhghall', registered: '2018/03/01', role: 'Member', status: 'Pending'},\n  {id: 20, name: 'Hiroto Šimun', registered: '2018/01/21', role: 'Staff', status: 'Active'},\n  {id: 21, name: 'Vishnu Serghei', registered: '2018/01/01', role: 'Member', status: 'Active'},\n  {id: 22, name: 'Zbyněk Phoibos', registered: '2018/02/01', role: 'Staff', status: 'Banned'},\n  {id: 23, name: 'Aulus Agmundr', registered: '2018/01/01', role: 'Member', status: 'Pending'},\n  {id: 42, name: 'Ford Prefect', registered: '2001/05/25', role: 'Alien', status: 'Don\\'t panic!'}\n]\n\nexport default usersData\n","import React from 'react';\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n} from '@coreui/react';\n\nimport usersData from '../../users/UsersData';\n// import CustomeTable from './customTable';\nconst getBadge = (status) => {\n  switch (status) {\n    case 'Active':\n      return 'success';\n    case 'Inactive':\n      return 'secondary';\n    case 'Pending':\n      return 'warning';\n    case 'Banned':\n      return 'danger';\n    default:\n      return 'primary';\n  }\n};\nconst fields = ['name', 'registered', 'role', 'status'];\nconst fieldstemp = ['_id', 'domain', 'metrics', 'sentiment_score', 'words'];\nconst Tables = () => {\n  return (\n    <>\n      <CRow>\n        <CCol xs='12' lg='6'>\n          <CCard>\n            <CCardHeader>Simple Table</CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={usersData}\n                fields={fieldstemp}\n                itemsPerPage={5}\n                dark\n                pagination\n                // scopedSlots={{\n                //   status: (item) => (\n                //     <td>\n                //       <CBadge color={getBadge(item.status)}>\n                //         {item.status}\n                //       </CBadge>\n                //     </td>\n                //   ),\n                // }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n\n        <CCol xs='12' lg='6'>\n          <CCard>\n            <CCardHeader>Striped Table</CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={usersData}\n                fields={fields}\n                striped\n                itemsPerPage={5}\n                pagination\n                scopedSlots={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n      <CRow>\n        <CCol xs='12' lg='6'>\n          <CCard>\n            <CCardHeader>Condensed Table</CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={usersData}\n                fields={fields}\n                size='sm'\n                itemsPerPage={5}\n                pagination\n                scopedSlots={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n\n        <CCol xs='12' lg='6'>\n          <CCard>\n            <CCardHeader>Bordered Table</CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={usersData}\n                fields={fields}\n                bordered\n                itemsPerPage={5}\n                pagination\n                scopedSlots={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>Combined All Table</CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={usersData}\n                fields={fields}\n                hover\n                striped\n                bordered\n                size='sm'\n                itemsPerPage={10}\n                pagination\n                scopedSlots={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>Combined All dark Table</CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={usersData}\n                fields={fields}\n                dark\n                hover\n                striped\n                bordered\n                size='sm'\n                itemsPerPage={10}\n                pagination\n                scopedSlots={{\n                  status: (item) => (\n                    <td>\n                      <CBadge color={getBadge(item.status)}>\n                        {item.status}\n                      </CBadge>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  );\n};\n\nexport default Tables;\n"],"sourceRoot":""}