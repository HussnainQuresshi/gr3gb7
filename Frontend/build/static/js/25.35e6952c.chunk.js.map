{"version":3,"sources":["views/Custom/add-fav.js","views/Custom/FavouriteTable.js"],"names":["ToggleFavourite","ID","toggle","a","axios","post","then","res","NotificationManager","success","console","log","catch","err","columns","label","field","sort","CustomTables","state","is_favourite","togglesearch","pageNo","size","pagesAmount","keyword","rows","domain","length","alphanumeric","numeric","hyphenated","tld","wordcount","words","score","toggleSearch","setState","metrics","onPageChange","e","getData","onChange","target","name","value","trim","args","data","pages","map","push","id","_id","className","w","key","sentiment_score","add_fav","onClick","this","xs","sm","md","style","height","placeholder","disabled","type","custom","searching","responsive","bordered","paging","striped","theadColor","small","noBottomColumns","hover","align","activePage","onActivePageChange","Component"],"mappings":"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","file":"static/js/25.35e6952c.chunk.js","sourcesContent":["import axios from 'axios';\nimport { NotificationManager } from 'react-notifications';\n\nconst ToggleFavourite = async (ID, toggle) => {\n  if (toggle) {\n    await axios\n      .post('api/add_favourite', { ID })\n      .then((res) => {\n        NotificationManager.success(\n          'Successfully Added Into Favourites',\n          'Successful!',\n          2000\n        );\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  } else {\n    await axios\n      .post('api/del_favourite', { ID })\n      .then((res) => {\n        NotificationManager.success(\n          'Successfully Removed From Favourites',\n          'Successful!',\n          2000\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n};\n\nexport default ToggleFavourite;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { MDBDataTable, MDBContainer, MDBRow, MDBCol } from 'mdbreact';\nimport ToggleFavourite from './add-fav';\nimport {\n  CPagination,\n  CSelect,\n  CRow,\n  CCol,\n  CCard,\n  CCardBody,\n} from '@coreui/react';\n\nconst columns = [\n  {\n    label: 'Id',\n    field: 'id',\n    sort: 'asc',\n  },\n  {\n    label: 'Domain',\n    field: 'domain',\n    sort: 'asc',\n  },\n  {\n    label: 'Metrics',\n    field: 'metrics',\n    sort: 'asc',\n  },\n  {\n    label: 'Words',\n    field: 'words',\n    sort: 'asc',\n  },\n  {\n    label: 'Sentiment_score',\n    field: 'sentiment_score',\n    sort: 'asc',\n  },\n  {\n    label: 'Add_Fav',\n    field: 'add_fav',\n    sort: 'asc',\n  },\n];\n\nexport default class CustomTables extends Component {\n  state = {\n    is_favourite: true,\n    togglesearch: false,\n    pageNo: 1,\n    size: 5,\n    pagesAmount: 1,\n    keyword: null,\n    columns: [...columns],\n    rows: [],\n    domain: null,\n    length: null,\n    alphanumeric: null,\n    numeric: null,\n    hyphenated: null,\n    tld: null,\n    wordcount: null,\n    words: null,\n    score: null,\n  };\n  toggleSearch = () => {\n    this.setState({\n      pageNo: 1,\n      size: 5,\n      pagesAmount: 1,\n      keyword: null,\n      domain: null,\n      metrics: null,\n      words: null,\n      score: null,\n      togglesearch: !this.state.togglesearch,\n    });\n  };\n  onPageChange = (e) => {\n    this.setState({ pageNo: e }, () => {\n      this.getData(this.state);\n    });\n  };\n  onChange = (e) => {\n    const { name, value } = e.target;\n    this.setState(\n      {\n        [name]: value.trim(),\n      },\n      () => {\n        this.getData(this.state);\n      }\n    );\n  };\n  getData = async (args) => {\n    await axios\n      .post('api/get_domains', {\n        ...args,\n      })\n      .then((res) => {\n        console.log(res);\n        let data = res.data.data;\n        let pages = res.data.pages;\n        let rows = [];\n        if (res.data.data.length > 0) {\n          data.map((data) => {\n            rows.push({\n              id: data._id,\n              domain: data.domain,\n              metrics: (\n                <>\n                  <span>alphanumeric: {data.metrics.alphanumeric}</span>\n                  <hr className='p-0 m-0' />\n                  <span>hyphenated :{data.metrics.hyphenated}</span>\n                  <hr className='p-0 m-0' />\n                  <span>\n                    length:\n                    {data.metrics.length}\n                  </span>\n                  <hr className='p-0 m-0' />\n                  ​​ <span>numeric: {data.metrics.numeric}</span>\n                  <hr className='p-0 m-0' />\n                  <span>\n                    tld:\n                    {data.metrics.tld}\n                  </span>\n                  <hr className='p-0 m-0' />\n                  ​​ <span>wordcount{data.metrics.wordcount}</span>\n                  <hr className='p-0 m-0' />\n                </>\n              ),\n              words: (\n                <>\n                  {data.words.map((w, key) => {\n                    return (\n                      <span key={key}>\n                        {w} <hr className='p-0 m-0' />\n                      </span>\n                    );\n                  })}\n                </>\n              ),\n              sentiment_score: data.sentiment_score,\n              add_fav: (\n                <button\n                  className={\n                    !data.is_favourite\n                      ? 'btn btn-success btn-sm'\n                      : 'btn btn-danger btn-sm'\n                  }\n                  onClick={() => {\n                    ToggleFavourite(data._id, !data.is_favourite);\n                    this.getData(this.state);\n                  }}>\n                  {!data.is_favourite ? <> add fav</> : <>remove fav</>}\n                </button>\n              ),\n            });\n          });\n          console.log('Setting state . .. ', rows);\n          this.setState({\n            ...this.state,\n            rows,\n            pagesAmount: pages,\n          });\n        } else {\n          this.setState({\n            ...this.state,\n            rows: [],\n            pageNo: 1,\n            pagesAmount: 1,\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({ ...this.state, rows: [], pageNo: 1, pagesAmount: 1 });\n      });\n  };\n  componentDidMount() {\n    this.getData(this.state);\n  }\n  render() {\n    return (\n      <>\n        <header className='text-align-center'>\n          <h1>FAVOURITE COMPONENT</h1>\n        </header>\n        <CRow className='m-0 p-0'>\n          <CCol xs='3' sm='2' md='1' className='m-1 p-0'>\n            <CCard className='m-0 p-0'>\n              <CCardBody className='m-0 p-0'>\n                <button\n                  style={{ height: '35px' }}\n                  className='btn btn-sm btn-success border-outline-green btn-block'\n                  onClick={this.toggleSearch}>\n                  Toggle\n                </button>\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol xs='6' sm='8' md='9' className='m-1 p-0'>\n            <CCard className='m-0 p-0'>\n              <CCardBody className='m-0 p-0'>\n                <input\n                  style={{ height: '35px' }}\n                  placeholder='SuperSearch'\n                  disabled={this.state.togglesearch}\n                  name='keyword'\n                  onChange={this.onChange}\n                  type='text'\n                  className='form-control form-control-sm m-0 p-0'\n                />\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol xs='2' sm='1' md='1' className='m-1 p-0'>\n            <CCard className='m-0 p-0'>\n              <CCardBody className='m-0 p-0'>\n                <CSelect\n                  custom\n                  name='size'\n                  placeholder='No of Entries'\n                  onChange={this.onChange}\n                  id='ccmonth'>\n                  <option value='5'>5</option>\n                  <option value='10'>10</option>\n                  <option value='20'>20</option>\n                  <option value='30'>30</option>\n                  <option value='40'>40</option>\n                  <option value='50'>50</option>\n                  <option value='60'>60</option>\n                  <option value='70'>70</option>\n                  <option value='80'>80</option>\n                  <option value='90'>90</option>\n                  <option value='100'>100</option>\n                  <option value='500'>500</option>\n                  <option value='1000'>1000</option>\n                </CSelect>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n        <CRow className='m-0 p-0'>\n          <CCol xs='5' sm='4' md='2' className='m-1 p-0'>\n            <CCard className='m-0 p-0'>\n              <CCardBody className='m-0 p-0'>\n                <input\n                  style={{ height: '35px' }}\n                  placeholder='Domain'\n                  disabled={!this.state.togglesearch}\n                  name='domain'\n                  onChange={this.onChange}\n                  type='text'\n                  className='form-control form-control-sm'\n                />\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol xs='5' sm='4' md='2' className='m-1 p-0'>\n            <CCard className='m-0 p-0'>\n              <CCardBody className='m-0 p-0'>\n                <input\n                  style={{ height: '35px' }}\n                  placeholder='m.length'\n                  disabled={!this.state.togglesearch}\n                  name='length'\n                  onChange={this.onChange}\n                  type='number'\n                  className='form-control form-control-sm'\n                />\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol xs='5' sm='4' md='2' className='m-1 p-0'>\n            <CCard className='m-0 p-0'>\n              <CCardBody className='m-0 p-0'>\n                {' '}\n                <input\n                  style={{ height: '35px' }}\n                  placeholder='m.alphanumeric'\n                  disabled={!this.state.togglesearch}\n                  name='alphanumeric'\n                  onChange={this.onChange}\n                  type='number'\n                  className='form-control form-control-sm'\n                />\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol xs='5' sm='4' md='2' className='m-1 p-0'>\n            <CCard className='m-0 p-0'>\n              <CCardBody className='m-0 p-0'>\n                {' '}\n                <input\n                  style={{ height: '35px' }}\n                  placeholder='m.hyphenated'\n                  disabled={!this.state.togglesearch}\n                  name='hyphenated'\n                  onChange={this.onChange}\n                  type='number'\n                  className='form-control form-control-sm'\n                />\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol xs='5' sm='4' md='2' className='m-1 p-0'>\n            <CCard className='m-0 p-0'>\n              <CCardBody className='m-0 p-0'>\n                {' '}\n                <input\n                  style={{ height: '35px' }}\n                  placeholder='m.tld'\n                  disabled={!this.state.togglesearch}\n                  name='tld'\n                  onChange={this.onChange}\n                  type='text'\n                  className='form-control form-control-sm'\n                />\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol xs='5' sm='4' md='2' className='m-1 p-0'>\n            <CCard className='m-0 p-0'>\n              <CCardBody className='m-0 p-0'>\n                {' '}\n                <input\n                  style={{ height: '35px' }}\n                  placeholder='m.wordcount'\n                  disabled={!this.state.togglesearch}\n                  name='wordcount'\n                  onChange={this.onChange}\n                  type='number'\n                  className='form-control form-control-sm'\n                />\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol xs='5' sm='4' md='2' className='m-1 p-0'>\n            <CCard className='m-0 p-0'>\n              <CCardBody className='m-0 p-0'>\n                <input\n                  style={{ height: '35px' }}\n                  placeholder='Words'\n                  disabled={!this.state.togglesearch}\n                  name='words'\n                  onChange={this.onChange}\n                  type='text'\n                  className='form-control form-control-sm'\n                />\n              </CCardBody>\n            </CCard>\n          </CCol>\n          <CCol xs='5' sm='4' md='2' className='m-1 p-0'>\n            <CCard className='m-0 p-0'>\n              <CCardBody className='m-0 p-0'>\n                <input\n                  style={{ height: '35px' }}\n                  placeholder='Sentimental score'\n                  disabled={!this.state.togglesearch}\n                  name='score'\n                  onChange={this.onChange}\n                  type='number'\n                  className='form-control form-control-sm'\n                />\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n        <CRow>\n          <CCol className='m-0 p-0'>\n            <CCard className='m-0 p-0'>\n              <CCardBody className='heavy-rain-gradient m-0 p-0'>\n                <MDBDataTable\n                  className='text-dark black-text p-2 strong'\n                  searching={false}\n                  responsive\n                  bordered={true}\n                  paging={false}\n                  striped\n                  theadColor='dark'\n                  small\n                  noBottomColumns\n                  hover\n                  data={this.state}\n                />\n                <CPagination\n                  align='center'\n                  activePage={this.state.pageNo}\n                  pages={this.state.pagesAmount}\n                  onActivePageChange={this.onPageChange}\n                />\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}