{"version":3,"sources":["views/Custom/add-fav.js","views/Custom/FavouriteTable.js"],"names":["ToggleFavourite","ID","toggle","a","axios","post","then","res","NotificationManager","success","console","log","catch","err","columns","label","field","sort","CustomTables","state","togglesearch","pageNo","size","keyword","pagesAmount","rows","domain","metrics","words","score","is_favourite","toggleSearch","setState","onPageChange","e","getData","onChange","target","name","value","trim","args","data","pages","length","map","push","id","_id","alphanumeric","className","hyphenated","numeric","tld","wordcount","w","key","sentiment_score","add_fav","onClick","this","style","height","placeholder","disabled","type","custom","searching","responsive","paging","striped","theadColor","small","noBottomColumns","hover","align","activePage","onActivePageChange","Component"],"mappings":"uOAGMA,EAAe,uCAAG,WAAOC,EAAIC,GAAX,SAAAC,EAAA,0DAClBD,EADkB,gCAEdE,IACHC,KAAK,0CAA2C,CAAEJ,OAClDK,MAAK,SAACC,GACLC,sBAAoBC,QAClB,qCACA,cACA,KAEFC,QAAQC,IAAIJ,MAEbK,OAAM,SAACC,GACNH,QAAQC,IAAIE,MAbI,6CAgBdT,IACHC,KAAK,0CAA2C,CAAEJ,OAClDK,MAAK,SAACC,GACLC,sBAAoBC,QAClB,uCACA,cACA,QAGHG,OAAM,SAACC,GACNH,QAAQC,IAAIE,MA1BI,2CAAH,wDA+BNb,O,kOC5BTc,EAAU,CACd,CACEC,MAAO,KACPC,MAAO,KACPC,KAAM,OAER,CACEF,MAAO,SACPC,MAAO,SACPC,KAAM,OAER,CACEF,MAAO,UACPC,MAAO,UACPC,KAAM,OAER,CACEF,MAAO,QACPC,MAAO,QACPC,KAAM,OAER,CACEF,MAAO,kBACPC,MAAO,kBACPC,KAAM,OAER,CACEF,MAAO,UACPC,MAAO,UACPC,KAAM,QAIWC,E,4MACnBC,MAAQ,CACNC,cAAc,EACdC,OAAQ,EACRC,KAAM,EACNC,QAAS,KACTC,YAAa,EACbV,QAAQ,GAAD,OAAMA,GACbW,KAAM,GACNC,OAAQ,KACRC,QAAS,KACTC,MAAO,KACPC,MAAO,KACPC,cAAc,G,EAEhBC,aAAe,WACb,EAAKC,SAAS,CACZT,QAAS,KACTG,OAAQ,KACRC,QAAS,KACTC,MAAO,KACPC,MAAO,KACPT,cAAe,EAAKD,MAAMC,gB,EAG9Ba,aAAe,SAACC,GACd,EAAKF,SAAS,CAAEX,OAAQa,IAAK,WAC3B,EAAKC,QAAQ,EAAKhB,W,EAGtBiB,SAAW,SAACF,GAAO,IAAD,EACQA,EAAEG,OAAlBC,EADQ,EACRA,KAAMC,EADE,EACFA,MACd,EAAKP,SAAL,eAEKM,EAAOC,EAAMC,SAEhB,WACE,EAAKL,QAAQ,EAAKhB,W,EAOxBgB,Q,uCAAU,WAAOM,GAAP,SAAAtC,EAAA,sEACFC,IACHC,KAAK,wCADF,eAECoC,IAEJnC,MAAK,SAACC,GACLG,QAAQC,IAAIJ,GACZ,IAAImC,EAAOnC,EAAImC,KAAKA,KAChBC,EAAQpC,EAAImC,KAAKC,MACjBlB,EAAO,GACPlB,EAAImC,KAAKA,KAAKE,OAAS,GACzBF,EAAKG,KAAI,SAACH,GACRjB,EAAKqB,KAAK,CACRC,GAAIL,EAAKM,IACTtB,OAAQgB,EAAKhB,OACbC,QACE,oCACE,+CAAqBe,EAAKf,QAAQsB,cAClC,wBAAIC,UAAU,YACd,6CAAmBR,EAAKf,QAAQwB,YAChC,wBAAID,UAAU,YACd,wCAEGR,EAAKf,QAAQiB,QAEhB,wBAAIM,UAAU,YAThB,gBAUK,0CAAgBR,EAAKf,QAAQyB,SAChC,wBAAIF,UAAU,YACd,qCAEGR,EAAKf,QAAQ0B,KAEhB,wBAAIH,UAAU,YAhBhB,gBAiBK,0CAAgBR,EAAKf,QAAQ2B,WAChC,wBAAIJ,UAAU,aAGlBtB,MACE,oCACGc,EAAKd,MAAMiB,KAAI,SAACU,EAAGC,GAClB,OACE,0BAAMA,IAAKA,GACRD,EADH,IACM,wBAAIL,UAAU,iBAM5BO,gBAAiBf,EAAKe,gBACtBC,QACE,4BACER,UACGR,EAAKZ,aAEF,wBADA,yBAGN6B,QAAS,WACP3D,YAAgB0C,EAAKM,KAAMN,EAAKZ,cAChC,EAAKK,QAAQ,EAAKhB,SAElBuB,EAAKZ,aAA+B,kDAAhB,sDAK9BpB,QAAQC,IAAI,sBAAuBc,GACnC,EAAKO,SAAL,2BACK,EAAKb,OADV,IAEEM,OACAD,YAAamB,MAGf,EAAKX,SAAL,2BAAmB,EAAKb,OAAxB,IAA+BM,KAAM,SAGxCb,OAAM,SAACC,GACNH,QAAQC,IAAIE,GACZ,EAAKmB,SAAL,2BAAmB,EAAKb,OAAxB,IAA+BM,KAAM,SA7EjC,2C,wHAFRmC,KAAKzB,QAAQyB,KAAKzC,S,+BAmFlB,OACE,oCACE,kBAAC,IAAD,CAAc+B,UAAU,6BACtB,4BAAQA,UAAU,qBAChB,qDAGJ,kBAAC,IAAD,CAAcA,UAAU,QACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,4BACEW,MAAO,CAAEC,OAAQ,QACjBZ,UAAU,8CACVS,QAASC,KAAK7B,cAHhB,kBAOF,kBAAC,IAAD,CAAQT,KAAK,KACX,2BACEuC,MAAO,CAAEC,OAAQ,QACjBC,YAAY,cACZC,SAAUJ,KAAKzC,MAAMC,aACrBkB,KAAK,UACLF,SAAUwB,KAAKxB,SACf6B,KAAK,OACLf,UAAU,kCAGd,kBAAC,IAAD,KACE,kBAAC,KAAD,CACEgB,QAAM,EACN5B,KAAK,OACLyB,YAAY,gBACZ3B,SAAUwB,KAAKxB,SACfW,GAAG,WACH,4BAAQR,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,WAIN,kBAAC,IAAD,CAAQW,UAAU,QAChB,kBAAC,IAAD,KACE,2BACEW,MAAO,CAAEC,OAAQ,QACjBC,YAAY,SACZC,UAAWJ,KAAKzC,MAAMC,aACtBkB,KAAK,SACLF,SAAUwB,KAAKxB,SACf6B,KAAK,OACLf,UAAU,kCAGd,kBAAC,IAAD,KACE,2BACEW,MAAO,CAAEC,OAAQ,QACjBC,YAAY,UACZC,UAAWJ,KAAKzC,MAAMC,aACtBkB,KAAK,UACLF,SAAUwB,KAAKxB,SACf6B,KAAK,OACLf,UAAU,kCAGd,kBAAC,IAAD,KACE,2BACEW,MAAO,CAAEC,OAAQ,QACjBC,YAAY,QACZC,UAAWJ,KAAKzC,MAAMC,aACtBkB,KAAK,QACLF,SAAUwB,KAAKxB,SACf6B,KAAK,OACLf,UAAU,kCAGd,kBAAC,IAAD,KACE,2BACEW,MAAO,CAAEC,OAAQ,QACjBC,YAAY,oBACZC,UAAWJ,KAAKzC,MAAMC,aACtBkB,KAAK,QACLF,SAAUwB,KAAKxB,SACf6B,KAAK,SACLf,UAAU,mCAIhB,kBAAC,IAAD,CAAcA,UAAU,8CACtB,kBAAC,IAAD,CACEH,GAAG,aACHG,UAAU,kCACViB,WAAW,EACXC,YAAU,EACVC,QAAQ,EACRC,SAAO,EACPC,WAAW,OACXC,OAAK,EACLC,iBAAe,EACfC,OAAK,EACLhC,KAAMkB,KAAKzC,SAIf,kBAAC,KAAD,CACEwD,MAAM,SACNC,WAAYhB,KAAKzC,MAAME,OACvBsB,MAAOiB,KAAKzC,MAAMK,YAClBqD,mBAAoBjB,KAAK3B,qB,GAlPK6C","file":"static/js/25.7c5ea8a2.chunk.js","sourcesContent":["import axios from 'axios';\nimport { NotificationManager } from 'react-notifications';\n\nconst ToggleFavourite = async (ID, toggle) => {\n  if (toggle) {\n    await axios\n      .post('http://localhost:5000/api/add_favourite', { ID })\n      .then((res) => {\n        NotificationManager.success(\n          'Successfully Added Into Favourites',\n          'Successful!',\n          2000\n        );\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  } else {\n    await axios\n      .post('http://localhost:5000/api/del_favourite', { ID })\n      .then((res) => {\n        NotificationManager.success(\n          'Successfully Removed From Favourites',\n          'Successful!',\n          2000\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n};\n\nexport default ToggleFavourite;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { MDBDataTable, MDBContainer, MDBRow, MDBCol } from 'mdbreact';\nimport ToggleFavourite from './add-fav';\nimport { CPagination, CSelect } from '@coreui/react';\n\nconst columns = [\n  {\n    label: 'Id',\n    field: 'id',\n    sort: 'asc',\n  },\n  {\n    label: 'Domain',\n    field: 'domain',\n    sort: 'asc',\n  },\n  {\n    label: 'Metrics',\n    field: 'metrics',\n    sort: 'asc',\n  },\n  {\n    label: 'Words',\n    field: 'words',\n    sort: 'asc',\n  },\n  {\n    label: 'Sentiment_score',\n    field: 'sentiment_score',\n    sort: 'asc',\n  },\n  {\n    label: 'Add_Fav',\n    field: 'add_fav',\n    sort: 'asc',\n  },\n];\n\nexport default class CustomTables extends Component {\n  state = {\n    togglesearch: false,\n    pageNo: 1,\n    size: 5,\n    keyword: null,\n    pagesAmount: 1,\n    columns: [...columns],\n    rows: [],\n    domain: null,\n    metrics: null,\n    words: null,\n    score: null,\n    is_favourite: true,\n  };\n  toggleSearch = () => {\n    this.setState({\n      keyword: null,\n      domain: null,\n      metrics: null,\n      words: null,\n      score: null,\n      togglesearch: !this.state.togglesearch,\n    });\n  };\n  onPageChange = (e) => {\n    this.setState({ pageNo: e }, () => {\n      this.getData(this.state);\n    });\n  };\n  onChange = (e) => {\n    const { name, value } = e.target;\n    this.setState(\n      {\n        [name]: value.trim(),\n      },\n      () => {\n        this.getData(this.state);\n      }\n    );\n  };\n  componentDidMount() {\n    this.getData(this.state);\n  }\n  getData = async (args) => {\n    await axios\n      .post('http://localhost:5000/api/get_domains', {\n        ...args,\n      })\n      .then((res) => {\n        console.log(res);\n        let data = res.data.data;\n        let pages = res.data.pages;\n        let rows = [];\n        if (res.data.data.length > 0) {\n          data.map((data) => {\n            rows.push({\n              id: data._id,\n              domain: data.domain,\n              metrics: (\n                <>\n                  <span>alphanumeric: {data.metrics.alphanumeric}</span>\n                  <hr className='p-0 m-0' />\n                  <span>hyphenated :{data.metrics.hyphenated}</span>\n                  <hr className='p-0 m-0' />\n                  <span>\n                    length:\n                    {data.metrics.length}\n                  </span>\n                  <hr className='p-0 m-0' />\n                  ​​ <span>numeric: {data.metrics.numeric}</span>\n                  <hr className='p-0 m-0' />\n                  <span>\n                    tld:\n                    {data.metrics.tld}\n                  </span>\n                  <hr className='p-0 m-0' />\n                  ​​ <span>wordcount{data.metrics.wordcount}</span>\n                  <hr className='p-0 m-0' />\n                </>\n              ),\n              words: (\n                <>\n                  {data.words.map((w, key) => {\n                    return (\n                      <span key={key}>\n                        {w} <hr className='p-0 m-0' />\n                      </span>\n                    );\n                  })}\n                </>\n              ),\n              sentiment_score: data.sentiment_score,\n              add_fav: (\n                <button\n                  className={\n                    !data.is_favourite\n                      ? 'btn btn-success btn-sm'\n                      : 'btn btn-danger btn-sm'\n                  }\n                  onClick={() => {\n                    ToggleFavourite(data._id, !data.is_favourite);\n                    this.getData(this.state);\n                  }}>\n                  {!data.is_favourite ? <> add fav</> : <>remove fav</>}\n                </button>\n              ),\n            });\n          });\n          console.log('Setting state . .. ', rows);\n          this.setState({\n            ...this.state,\n            rows,\n            pagesAmount: pages,\n          });\n        } else {\n          this.setState({ ...this.state, rows: [] });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({ ...this.state, rows: [] });\n      });\n  };\n  render() {\n    return (\n      <>\n        <MDBContainer className='d-flex text-align-center '>\n          <header className='text-align-center'>\n            <h1>FAVOURITE COMPONENT</h1>\n          </header>\n        </MDBContainer>\n        <MDBContainer className='mt-5'>\n          <MDBRow>\n            <MDBCol>\n              <button\n                style={{ height: '35px' }}\n                className='btn btn-sm btn-success border-outline-green'\n                onClick={this.toggleSearch}>\n                Toggle Search\n              </button>\n            </MDBCol>\n            <MDBCol size='9'>\n              <input\n                style={{ height: '35px' }}\n                placeholder='SuperSearch'\n                disabled={this.state.togglesearch}\n                name='keyword'\n                onChange={this.onChange}\n                type='text'\n                className='form-control form-control-sm'\n              />\n            </MDBCol>\n            <MDBCol>\n              <CSelect\n                custom\n                name='size'\n                placeholder='No of Entries'\n                onChange={this.onChange}\n                id='ccmonth'>\n                <option value='5'>5</option>\n                <option value='10'>10</option>\n                <option value='20'>20</option>\n                <option value='30'>30</option>\n                <option value='40'>40</option>\n                <option value='50'>50</option>\n                <option value='60'>60</option>\n                <option value='70'>70</option>\n                <option value='80'>80</option>\n                <option value='90'>90</option>\n                <option value='100'>100</option>\n                <option value='500'>500</option>\n                <option value='1000'>1000</option>\n              </CSelect>\n            </MDBCol>\n          </MDBRow>\n          <MDBRow className='mt-4'>\n            <MDBCol>\n              <input\n                style={{ height: '35px' }}\n                placeholder='Domain'\n                disabled={!this.state.togglesearch}\n                name='domain'\n                onChange={this.onChange}\n                type='text'\n                className='form-control form-control-sm'\n              />\n            </MDBCol>\n            <MDBCol>\n              <input\n                style={{ height: '35px' }}\n                placeholder='Metrics'\n                disabled={!this.state.togglesearch}\n                name='metrics'\n                onChange={this.onChange}\n                type='text'\n                className='form-control form-control-sm'\n              />\n            </MDBCol>\n            <MDBCol>\n              <input\n                style={{ height: '35px' }}\n                placeholder='Words'\n                disabled={!this.state.togglesearch}\n                name='words'\n                onChange={this.onChange}\n                type='text'\n                className='form-control form-control-sm'\n              />\n            </MDBCol>\n            <MDBCol>\n              <input\n                style={{ height: '35px' }}\n                placeholder='Sentimental score'\n                disabled={!this.state.togglesearch}\n                name='score'\n                onChange={this.onChange}\n                type='number'\n                className='form-control form-control-sm'\n              />\n            </MDBCol>\n          </MDBRow>\n          <MDBContainer className='heavy-rain-gradient rounded hoverable mt-5'>\n            <MDBDataTable\n              id='divToPrint'\n              className='text-dark black-text p-2 strong'\n              searching={false}\n              responsive\n              paging={false}\n              striped\n              theadColor='dark'\n              small\n              noBottomColumns\n              hover\n              data={this.state}\n            />\n          </MDBContainer>\n\n          <CPagination\n            align='center'\n            activePage={this.state.pageNo}\n            pages={this.state.pagesAmount}\n            onActivePageChange={this.onPageChange}\n          />\n        </MDBContainer>\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}